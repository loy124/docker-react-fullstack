version: "3"
services: 
  frontend:
    build:
      dockerfile: Dockerfile.dev
      context: ./frontend
    #코드 수정후 다시이미지 build없이 코드가 반영 될 수 있게 volume을 사용한다.
    volumes:
      - /app/node_modules
      - ./frontend:/app
    stdin_open: true

  nginx:
    #재시작 정책
    #no: 어떠한 상황에서도 재시작을 하지 않습니다
    #always: 항상 재시작
    #on-failure: 에러코드와 함께 컨테이너가 멈추었을 때만 재시작 
    #unless-stopped 개발자가 임의로 멈추려고 할때 빼고는 항상 재시작
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./nginx
    ports:
      - "3000:80"

  backend:
    build: 
      dockerfile: Dockerfile.dev
      context: ./backend
    container_name: app_backend
    volumes:
      - /app/node_modules
      - ./backend:/app

  # mysql:
  #   build: ./mysql
  #   restart: unless-stopped
  #   container_name: app_mysql
  #   ports:
  #     - "3307:3307"
  #   volumes:
  #     - ./mysql/mysql_data:/var/lib/mysql
  #     - ./mysql/sqls/:/docker-entrypoint-initdb.d/
  #   environment:
  #     MYSQL_USER: root
  #     MYSQL_ROOT_PASSWORD: root
  #     MYSQL_DATABASE: myapp
  #     MYSQL_TCP_PORT: 3307
  #mysql의 root 비밀번호와 db를 설정해준다.
    

      